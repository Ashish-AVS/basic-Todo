{"version":3,"sources":["utils/firebase.js","NewTodo.js","components/NavBar.js","service/auth.js","config/authMethods.js","components/ErrorLogs.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Todos","authData","useState","queryBody","setQueryBody","data","setData","console","log","displayName","email","useEffect","database","ref","on","snapshot","todos","val","todoList","ids","push","id","className","Title","level","style","paddingTop","paddingLeft","Search","placeholder","allowClear","onSearch","todo","Body","striked","alert","margin","width","onChange","event","target","value","map","el","marginRight","onClick","temp","handleStrike","textDecoration","child","remove","float","NavBar","socialMediaAuth","provider","auth","signInWithPopup","then","res","user","catch","err","facebookProvider","FacebookAuthProvider","githubProvider","GithubAuthProvider","googleProvider","GoogleAuthProvider","ErrorLogs","props","isModalVisible","setIsModalVisible","title","visible","onOk","onCancel","fontSize","textAlign","fontFamily","message","code","App","isLoggedIn","setIsLoggedIn","setAuthData","handleAuth","a","prevState","direction","size","type","FacebookOutlined","GoogleOutlined","GithubOutlined","NewTodo","show","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.309dbbec.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDjGbIIF0GswHW8boDdZcxjrqsnc7IrJoo\",\n    authDomain: \"todo-list-7551f.firebaseapp.com\",\n    projectId: \"todo-list-7551f\",\n    storageBucket: \"todo-list-7551f.appspot.com\",\n    messagingSenderId: \"604258737811\",\n    appId: \"1:604258737811:web:4b3842da81edce0959f766\",\n    measurementId: \"G-XRS4E86MQV\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\nexport default firebase;","import React, {useState, useEffect} from 'react';\nimport { Input, Typography, Button, Checkbox } from 'antd';\nimport './App.css'\nimport firebase from './utils/firebase'\n\nconst Todos = ({authData}) => {\n    const [queryBody, setQueryBody] = useState(\"\");\n    const [data, setData] = useState([]);\n\n\n    {console.log(authData.displayName, authData.email)}\n\n    // Firebase Stuff\n\n    useEffect(() => {\n        const todoRef = firebase.database().ref(\"Todo\");\n        todoRef.on('value', (snapshot) => {\n            // console.log(snapshot.val());\n            const todos = snapshot.val();\n            const todoList = [];\n\n            for(let ids in todos) {\n                todoList.push({id: ids, ...todos[ids]}); // Loop through and obj and push id\n            }   \n            //READ\n            console.log(todoList);\n            // console.log(data);\n            setData(todoList);\n        } )\n      }, [])\n    \n    const addTodoHandler = () => {\n        if(!queryBody){\n            alert(\"Enter a Todo\")\n            return\n        }\n        const todo = { Body:queryBody, striked:false };\n\n        // WRITE\n        const todoRef = firebase.database().ref(\"Todo\"); //Call it anything you want\n        todoRef.push(todo);\n        \n        // setData(prevState => [...prevState, todo]);\n        setQueryBody(\"\")\n    }\n    const removeTodos = (id) => {\n        // const newData = data.filter(todo => todo.id!==id);\n        // setData(newData);\n        const todoRef = firebase.database().ref('Todo').child(id);\n        todoRef.remove();\n        console.log(id)\n    }\n\n    const handleStrike = (id) => {\n        const temp = data.map(el => {\n            if(el.id === id) el.striked = !el.striked\n            return el;\n        })\n        setData(temp);\n        // const todoRef = firebase.database().ref('Todo').child('id');\n        // todoRef.update({\n        //     striked: !data\n        // })\n    }\n    return(\n        <div className=\"container\">\n        <Typography.Title level={2} style={{paddingTop:\"10px\", paddingLeft:\"20px\"}}>Enter Your Todo</Typography.Title>\n           <Input.Search \n           placeholder=\"Enter your Todo\" \n           allowClear \n           onSearch={addTodoHandler} \n           style={{margin: \"2.5%\", width:\"90%\"}} \n           onChange={(event) => setQueryBody(event.target.value)} \n           value={queryBody}/>\n            <div>\n           {\n               data && data.map(el => \n                <div className=\"todo-item\" key={el.id}>\n                    <Checkbox style={{marginRight:\"10px\"}} onClick={() => handleStrike(el.id)}></Checkbox>\n                    <span className=\"todo-item-body-checked\" style={el.striked?{textDecoration:\"line-through\"}:{textDecoration:\"none\"}}>{el.Body}</span>\n                    <Button onClick={() => removeTodos(el.id)} style={{float:'right'}}>Done</Button>\n                </div>\n               )\n           }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Todos;","import React from 'react'\nimport '../App.css';\nconst NavBar = ({authData}) => {\n    return(\n        <div className=\"Navbar\">\n            <span>Todo List</span>\n            <div className=\"navbar-auth\">\n            {authData.displayName?\n            <span className=\"auth-name\">{\"Welcome, \" + authData.displayName}</span>:\n            <span>Login To continue</span>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","import firebase from '../utils/firebase'\n\nconst socialMediaAuth = (provider) => {\n    return firebase.auth().signInWithPopup(provider).then(res => {\n        return res.user;\n    }).catch(err => {\n        return err;\n    });\n};\n\nexport default socialMediaAuth;","import firebase from '../utils/firebase';\n\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const githubProvider = new firebase.auth.GithubAuthProvider();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();","import React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\n\nconst ErrorLogs = (props) => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    \n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    return(\n        <div>\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n           </Modal>\n           <div style={{fontSize:\"30px\", textAlign:\"center\", fontFamily:\"Ubuntu\"}}>\n            <p>{props.message.code}</p>\n            <p>{props.message.message}</p>\n           </div>\n        </div>\n\n    )\n}\n\nexport default ErrorLogs;\n\n// import React, { useState } from 'react';\n// import { Modal, Button } from 'antd';\n\n// const App = () => {\n//   const [isModalVisible, setIsModalVisible] = useState(false);\n\n//   const showModal = () => {\n//     setIsModalVisible(true);\n//   };\n\n//   const handleOk = () => {\n//     setIsModalVisible(false);\n//   };\n\n//   const handleCancel = () => {\n//     setIsModalVisible(false);\n//   };\n\n//   return (\n//     <>\n//       <Button type=\"primary\" onClick={showModal}>\n//         Open Modal\n//       </Button>\n//       <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n//         <p>Some contents...</p>\n//         <p>Some contents...</p>\n//         <p>Some contents...</p>\n//       </Modal>\n//     </>\n//   );\n// };\n\n// ReactDOM.render(<App />, mountNode);","import './App.css';\nimport \"antd/dist/antd.css\";\nimport NewTodo from './NewTodo';\nimport NavBar from './components/NavBar'\nimport firebase from './utils/firebase';\nimport React, {useEffect, useState} from 'react';\nimport socialMediaAuth from './service/auth';\nimport { facebookProvider, githubProvider, googleProvider } from './config/authMethods';\nimport ErrorLogs from './components/ErrorLogs'\nimport {Button, Space} from 'antd'\nimport {FacebookOutlined, GoogleOutlined, GithubOutlined} from '@ant-design/icons';\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [authData, setAuthData] = useState({});\n\n  const handleAuth = async (provider) => {\n    const res = await socialMediaAuth(provider);\n    // console.log(res);\n    setAuthData(prevState => res);\n\n    if(res===null || res.a===null){\n      setIsLoggedIn(false);\n    }\n    else{\n      setIsLoggedIn(true)\n    }\n  }\n \n\n  return (\n    <div className=\"App\">\n      <nav>\n        <NavBar authData={authData}/>\n      </nav>\n      {!isLoggedIn?\n        <div className=\"login-form\">\n          <Space direction=\"vertical\" size=\"small\">\n          <Button type = \"primary\" \n          className=\"btn-styles\" \n          onClick={() => handleAuth(facebookProvider)}>\n\n          <FacebookOutlined/>Facebook</Button>\n          <br />\n          <Button type = \"primary\" \n          className=\"btn-styles\" \n          onClick={() => handleAuth(googleProvider)}>\n\n          <GoogleOutlined/>Google</Button>\n          <br />\n          <Button type = \"primary\" \n          className=\"btn-styles\" \n          onClick={() => handleAuth(githubProvider)}>\n\n          <GithubOutlined/>Github</Button>\n\n          </Space>\n        </div>\n      :null}\n      {isLoggedIn?<NewTodo authData={authData} />:<ErrorLogs message = {authData} show={true}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}
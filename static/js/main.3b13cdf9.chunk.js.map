{"version":3,"sources":["utils/firebase.js","NewTodo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Todos","useState","queryBody","setQueryBody","data","setData","useEffect","database","ref","on","snapshot","todos","val","todoList","ids","push","id","console","log","className","Title","level","style","paddingTop","paddingLeft","Search","placeholder","allowClear","onSearch","todo","Body","striked","alert","margin","width","onChange","event","target","value","map","el","marginRight","onClick","temp","handleStrike","textDecoration","child","remove","float","App","NewTodo","ReactDOM","render","document","getElementById"],"mappings":"0NAYEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBR,IAASS,YACIT,QAAf,EC4EeU,EArFD,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAOAC,qBAAU,WACUhB,EAASiB,WAAWC,IAAI,QAChCC,GAAG,SAAS,SAACC,GAEjB,IAAMC,EAAQD,EAASE,MACjBC,EAAW,GAEjB,IAAI,IAAIC,KAAOH,EACXE,EAASE,KAAT,aAAeC,GAAIF,GAAQH,EAAMG,KAGrCG,QAAQC,IAAIL,GAEZR,EAAQQ,QAEX,IAmCL,OACI,sBAAKM,UAAU,YAAf,UACA,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGC,MAAO,CAACC,WAAW,OAAQC,YAAY,QAAnE,6BACG,cAAC,IAAMC,OAAP,CACAC,YAAY,kBACZC,YAAU,EACVC,SAvCgB,WACnB,GAAI1B,EAAJ,CAIA,IAAM2B,EAAO,CAAEC,KAAK5B,EAAW6B,SAAQ,GAGvBzC,EAASiB,WAAWC,IAAI,QAChCO,KAAKc,GAGb1B,EAAa,SAVT6B,MAAM,iBAsCPV,MAAO,CAACW,OAAQ,OAAQC,MAAM,OAC9BC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOC,QAC/CA,MAAOpC,IACN,8BAEGE,GAAQA,EAAKmC,KAAI,SAAAC,GAAE,OAClB,sBAAKrB,UAAU,YAAf,UACI,cAAC,IAAD,CAAUG,MAAO,CAACmB,YAAY,QAASC,QAAS,kBAzB3C,SAAC1B,GAClB,IAAM2B,EAAOvC,EAAKmC,KAAI,SAAAC,GAElB,OADGA,EAAGxB,KAAOA,IAAIwB,EAAGT,SAAWS,EAAGT,SAC3BS,KAEXnC,EAAQsC,GAoB0DC,CAAaJ,EAAGxB,OACtE,sBAAMG,UAAU,yBAAyBG,MAAOkB,EAAGT,QAAQ,CAACc,eAAe,gBAAgB,CAACA,eAAe,QAA3G,SAAqHL,EAAGV,OACxH,cAAC,IAAD,CAAQY,QAAS,kBAnCZ1B,EAmC8BwB,EAAGxB,GAhClC1B,EAASiB,WAAWC,IAAI,QAAQsC,MAAM9B,GAC9C+B,cACR9B,QAAQC,IAAIF,GALI,IAACA,GAmCsCM,MAAO,CAAC0B,MAAM,SAAzD,oBAH4BR,EAAGxB,aChDpCiC,MArBf,WAWE,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,uBAGA,cAAC+B,EAAD,QCnBNC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.3b13cdf9.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDjGbIIF0GswHW8boDdZcxjrqsnc7IrJoo\",\n    authDomain: \"todo-list-7551f.firebaseapp.com\",\n    projectId: \"todo-list-7551f\",\n    storageBucket: \"todo-list-7551f.appspot.com\",\n    messagingSenderId: \"604258737811\",\n    appId: \"1:604258737811:web:4b3842da81edce0959f766\",\n    measurementId: \"G-XRS4E86MQV\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\nexport default firebase;","import React, {useState, useEffect} from 'react';\nimport { Input, Typography, Button, Checkbox } from 'antd';\nimport './App.css'\nimport firebase from './utils/firebase'\n\nconst Todos = () => {\n    const [queryBody, setQueryBody] = useState(\"\");\n    const [data, setData] = useState([]);\n\n\n\n\n    // Firebase Stuff\n\n    useEffect(() => {\n        const todoRef = firebase.database().ref(\"Todo\");\n        todoRef.on('value', (snapshot) => {\n            // console.log(snapshot.val());\n            const todos = snapshot.val();\n            const todoList = [];\n\n            for(let ids in todos) {\n                todoList.push({id: ids, ...todos[ids]}); // Loop through and obj and push id\n            }   \n            //READ\n            console.log(todoList);\n            // console.log(data);\n            setData(todoList);\n        } )\n      }, [])\n    \n    const addTodoHandler = () => {\n        if(!queryBody){\n            alert(\"Enter a Todo\")\n            return\n        }\n        const todo = { Body:queryBody, striked:false };\n\n        // WRITE\n        const todoRef = firebase.database().ref(\"Todo\"); //Call it anything you want\n        todoRef.push(todo);\n        \n        // setData(prevState => [...prevState, todo]);\n        setQueryBody(\"\")\n    }\n    const removeTodos = (id) => {\n        // const newData = data.filter(todo => todo.id!==id);\n        // setData(newData);\n        const todoRef = firebase.database().ref('Todo').child(id);\n        todoRef.remove();\n        console.log(id)\n    }\n\n    const handleStrike = (id) => {\n        const temp = data.map(el => {\n            if(el.id === id) el.striked = !el.striked\n            return el;\n        })\n        setData(temp);\n        // const todoRef = firebase.database().ref('Todo').child('id');\n        // todoRef.update({\n        //     striked: !data\n        // })\n    }\n    return(\n        <div className=\"container\">\n        <Typography.Title level={2} style={{paddingTop:\"10px\", paddingLeft:\"20px\"}}>Enter Your Todo</Typography.Title>\n           <Input.Search \n           placeholder=\"Enter your Todo\" \n           allowClear \n           onSearch={addTodoHandler} \n           style={{margin: \"2.5%\", width:\"90%\"}} \n           onChange={(event) => setQueryBody(event.target.value)} \n           value={queryBody}/>\n            <div>\n           {\n               data && data.map(el => \n                <div className=\"todo-item\" key={el.id}>\n                    <Checkbox style={{marginRight:\"10px\"}} onClick={() => handleStrike(el.id)}></Checkbox>\n                    <span className=\"todo-item-body-checked\" style={el.striked?{textDecoration:\"line-through\"}:{textDecoration:\"none\"}}>{el.Body}</span>\n                    <Button onClick={() => removeTodos(el.id)} style={{float:'right'}}>Done</Button>\n                </div>\n               )\n           }\n            </div>\n\n        </div>\n    )\n}\n\nexport default Todos;","import './App.css';\nimport \"antd/dist/antd.css\";\nimport Todos from './Todos';\nimport NewTodo from './NewTodo';\nimport firebase from './utils/firebase';\nimport React, {useEffect} from 'react';\n\n\nfunction App() {\n\n\n  // useEffect(() => {\n  //   const todoRef = firebase.database().ref(\"Todo\");\n  //   todoRef.on('value', (snapshot) => {\n  //       console.log(snapshot.val());\n  //   } )\n  // }, [])\n\n\n  return (\n    <div className=\"App\">\n      <nav className=\"Navbar\">\n        Todo List\n      </nav>\n      <NewTodo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}